{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/validators/email.ts","../../src/pages/login/login.ts"],"names":[],"mappings":"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","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { LoginPage } from './login';\n\n@NgModule({\n  declarations: [\n    LoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n  ],\n  exports: [\n    LoginPage\n  ]\n})\nexport class LoginModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { FormControl } from '@angular/forms';\n\nexport class EmailValidator {\n  /**\n   * Verifica se o email é valido através de uma expressão regular.\n   */\n  static isValid(control: FormControl): any {\n    let EMAIL_REGEXP = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;      \n\n    return EMAIL_REGEXP.test(control.value) ? null : { invalidEmail : true};\n\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/validators/email.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams, AlertController, ToastController, Events } from 'ionic-angular';\n\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { EmailValidator } from '../../validators/email';\n\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { AuthService } from '../../providers/auth-service';\n\nimport { IonicPage } from 'ionic-angular';\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html'\n})\nexport class LoginPage {\n\n  //A FormGroup is a collection of FormControls, which is inputed in html.\n  private loginForm: FormGroup;\n\n  //Boolean variable that stores if user tries to submit the form.\n  private submitAttempt: boolean;\n\n  //String variable that stores the server error in a failed signin.\n  private loginError: string;\n\n\n  constructor(public navCtrl: NavController, public navParams: NavParams,\n    public alertCtrl: AlertController, private formBuilder: FormBuilder,\n    public toastCtrl: ToastController, public events: Events, \n    private _auth: AuthService, private afAuth: AngularFireAuth) {\n\n    //Create FormBuilder with your inputs and their Validators.\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required, EmailValidator.isValid])],\n      password: ['', Validators.required]\n    });\n\n    //Persistir o login do usuário\n    //TODO: executar função abaixo somente na primeira vez.\n    this._auth.persistLogin()\n      .then( val => {\n        console.log(val)\n        this.onLoginSuccess()\n      })\n      .catch(reason => console.log(reason));\n\n  }\n\n  /**\n   * Fazer o login do usuário se o formulário for válido.\n   */\n  login(): void {\n    this.submitAttempt = true;\n    if (this.loginForm.valid) {\n\n      this._auth.signInWithEmail(this.loginForm.value.email, this.loginForm.value.password)\n        .then(() => this.onLoginSuccess())  //  Se o login deu certo, executar onLoginSuccess\n        .catch(error => { this.loginError = error.message }); //se não, mostre o erro. \n\n    } else {\n      console.log(\"loginForm is not valid.\");\n    }\n  }\n\n  /**\n   * Executa as funções após o login.\n   */\n  onLoginSuccess(): void {\n    this.events.publish('login'); //Criar um evento chamado 'login' para o sidemenu.\n    this.navCtrl.setRoot('HomePage'); //Ir para HomePage.\n  }\n\n  /**\n   * Envia um email para resetar a senha do usuário.\n   */\n  resetPass(): void {\n    let prompt = this.alertCtrl.create({\n      title: 'Esqueceu a senha?',\n      message: \"Digite seu email para podermos resetar sua senha.\",\n      inputs: [\n        {\n          name: 'email',\n          placeholder: 'Email'\n        },\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          handler: data => {\n            console.log('Cancel clicked on forgotPassword()');\n          }\n        },\n        {\n          text: 'Enviar',\n          handler: data => {\n            this.afAuth.auth.sendPasswordResetEmail(data.email)\n              .then(() => { this.onResetSuccess(data.email); })\n              .catch(error => { this.onResetFailure(error.message); });\n          }\n        }\n      ]\n    });\n    prompt.present();\n  }\n\n  /**\n   * Mostra um Toast caso a resetPass() tenha sido sucedida.\n   */\n  onResetSuccess(email: string): void {\n    let toast = this.toastCtrl.create({\n      message: 'Email enviado para ' + email,\n      duration: 3000\n    });\n    toast.present();\n  }\n\n  /**\n   * Mostra um Toast caso a resetPass() tenha falhado.\n   */\n  onResetFailure(error: string) {\n    let toast = this.toastCtrl.create({\n      message: error,\n      duration: 3000\n    });\n    toast.present();\n  }\n\n  /**\n   * Alert que mostra ajuda antes do login.\n   */\n  help(): void {\n    let help = this.alertCtrl.create({\n      title: 'Ajuda',\n      subTitle: 'Este aplicativo é o aplicativo para compra de refeições do RU da UNESP Bauru. Para entrar, digite seu email e senha previamente cadastrados. Caso não tenha cadastro, vá ate a DTAd do campus para realizar o cadastro.',\n      buttons: ['OK']\n    });\n    help.present();\n  }\n\n  /**\n   * Vai para a página de signup\n   */\n  signup(): void {\n    this.navCtrl.push('SignupPage');\n  }\n\n  //função para o desenvolvimento\n  fastLogin(): void {\n    this._auth.signInWithEmail(\"cieslakluiz@gmail.com\", \"123456\")\n      .then(() => this.onLoginSuccess())  //if login is sucessfull, go to home page\n      .catch(error => { this.loginError = error.message }); //else, show the error.\n  }\n\n  //função para o desenvolvimento\n  vegLogin(): void {\n    this._auth.signInWithEmail(\"luiz_cieslak@hotmail.com\", \"luizveg\")\n      .then(() => this.onLoginSuccess())  //if login is sucessfull, go to home page\n      .catch(error => { this.loginError = error.message }); //else, show the error.\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}